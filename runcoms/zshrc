#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Syntax highlighting
ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[command]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[path]='fg=blue'

# Options
setopt CHECK_JOBS
setopt CLOBBER
setopt HUP
unsetopt SHARE_HISTORY

# Aliases
alias cp='nocorrect cp'
alias rm='nocorrect rm'
alias mv='nocorrect mv'

alias sll='smt list -l | less'

if ! (type -p netcat > /dev/null); then
    alias netcat=nc
fi

alias vi=vim

# Completion
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' \
    'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

zstyle ':completion:*:*:open:*' ignored-patterns '*?.bib' '*?.aux' '*?.bbl' \
    '*?.bcf' '*?.blg' '*?.log' '*?.out' '*?.xml' '*?.synctex.gz' '*?.tex'


# Keys
bindkey -M viins -r 'jk'
bindkey -M viins -r 'kj'
bindkey -M vicmd 'gg' beginning-of-history
bindkey -M vicmd 'g~' vi-oper-swap-case
bindkey -M viins "$key_info[Control]S" prepend-sudo
bindkey -M viins "$key_info[Control]N" accept-and-infer-next-history
bindkey -M viins "$key_info[Control]A" beginning-of-line
bindkey -M viins "$key_info[Control]E" end-of-line
bindkey -M viins "$key_info[Control]U" kill-whole-line
bindkey 'OM' accept-line

zmodload zsh/complist # To be able to access menuselect keymap
bindkey -M menuselect '^o' accept-and-infer-next-history

lesskey ~/.zprezto/lesskey

if [[ -d ~/.pyenv/plugins/pyenv-virtualenvwrapper ]]; then
    export WORKON_HOME="${HOME}/.virtualenvs"
    export PROJECT_HOME="${HOME}/Documents/projects"
    pyenv virtualenvwrapper
elif [[ -x /opt/local/Library/Frameworks/Python.framework/Versions/Current/bin/virtualenvwrapper.sh ]]; then
    export WORKON_HOME="${HOME}/.virtualenvs"
    export PROJECT_HOME="${HOME}/Documents/projects"
    source /opt/local/Library/Frameworks/Python.framework/Versions/Current/bin/virtualenvwrapper.sh
fi

export TIMEFMT='%J   %U  user %S system %P cpu %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M MB'$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

if [[ $(uname) == *NT* ]]; then
    env=~/.ssh/agent.env

    agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

    agent_start () {
        (umask 077; ssh-agent >| "$env")
        . "$env" >| /dev/null ; }

    agent_load_env

    # agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
    agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

    if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
        agent_start
        ssh-add
    elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
        ssh-add
    fi

    unset env
fi

if type starship > /dev/null; then
    eval "$(starship init zsh)"
    setopt PROMPT_SUBST
    export RPROMPT='$(STARSHIP_CONFIG=~/.config/starship-right.toml starship prompt)'
fi
